#!/bin/bash

usage() { echo "Usage: $0 [-r|-c] [file_path]" 1>&2; exit 1; }
stat_rows() {
    echo $1
    if [ -f $1 ] ;then
        cat $1 | tr ' ' '\t'
        ln=`wc -l < $1`;
    else
        echo $1 | tr ' ' '\t'
        ln=`echo $1 | wc -l`
    fi
    i=1
    echo -e "\nStats analysis by rows\nAverage\tMean"
    while read line 
    do
        sum=0
        n=${#arr[@]}
        ni=$(($n/2))
        arr=($line);
        for j in ${arr[@]}; do let sum+=$j; done
        ave=$(($sum/${#arr[@]}));
        IFS=$'\n'; 
        sorted=($(sort -n <<< "${arr[*]}"));
        unset IFS;
        #echo "${sorted[@]}"
        mean=${sorted[$ni]}
        echo -e "$ave\t$mean";
        i=$(($i+1))
    done < $1
}
stat_cols() {
    cat $1 | tr ' ' '\t'
    ln=`wc -l < $1`
    cn=`awk '{print NF}' $1 | sort -nu | tail -1`
    i=1
    echo -e "\nStats analysis by colums\nAverage\tMean"
    while test $i -le $cn
    do
        sum=0
        lnm=$(($ln/2))
        arr=`cut -d' ' -f$i $1`
        for j in ${arr[@]}; do let sum+=$j; done
        ave=$(($sum/$ln));
        IFS=$'\n'; 
        sorted=($(sort -n <<< "${arr[*]}"));
        unset IFS;
        #echo "${sorted[@]}"
        mean=${sorted[$lnm]}
        echo -e "$ave\t$mean";
        i=$(($i+1))
    done < $1
}

while [ $# -gt 0 ]
do
    case $1 in
        -r*)
            if [[ -f $2 ]] ; then 
                stat_rows $2
            else
                cat > tmp
                stat_rows tmp
                rm -f tmp
            fi
            ;;
        -c*)
            if [[ -f $2 ]] ; then 
                stat_cols $2
            else
                cat > tmp
                stat_cols tmp
                rm -f tmp
            fi
            ;;
        -*)
            usage
            ;;
        *)
            break
            ;;
    esac
    shift
done
exit 0
